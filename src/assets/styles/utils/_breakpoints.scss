// Breakpoints for each query
$smartphone: 480px;
$smartphoneSmall: 320px;
$tabletPortrait: 780px;
$tabletLandscape: 1024px;
$desktop: 1174px;
$largeScreen: 1400px;
$xlargeScreen: 1650px;

//
$menuHideSize: 550px;
@mixin respondTo($media) {
  @if $media == smartphone {
    @media (max-width: $smartphone) { @content; }
  }
  @else if $media == tablet {
    @media (min-width: $tabletPortrait) and (max-width: $tabletLandscape) { @content; }
  }
  @else if $media == smallScreen {
    @media (max-width: $desktop) { @content; }
  }
  @else if $media == desktop {
    @media (min-width: $desktop) { @content; }
  }
}

$breakpoints: (
        's':  ( max-width:  $smartphone ),
        't':  ( max-width: $tabletPortrait ),
        'tl':  ( max-width: $tabletLandscape ),
        'm':  ( max-width: $desktop ),
        'l':  ( min-width: $largeScreen ),
        'xl':  ( min-width: $xlargeScreen ),
) !default;
/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }

    // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
